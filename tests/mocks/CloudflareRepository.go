// Code generated by mockery v2.15.0. DO NOT EDIT.

package mocks

import (
	context "context"

	entity "github.com/alfarady/makestatic/entity"
	mock "github.com/stretchr/testify/mock"
)

// CloudflareRepository is an autogenerated mock type for the CloudflareRepository type
type CloudflareRepository struct {
	mock.Mock
}

// UpdateDnsIP provides a mock function with given fields: ctx, params
func (_m *CloudflareRepository) UpdateDnsIP(ctx context.Context, params entity.CFUpdateDNSIp) error {
	ret := _m.Called(ctx, params)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, entity.CFUpdateDNSIp) error); ok {
		r0 = rf(ctx, params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewCloudflareRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewCloudflareRepository creates a new instance of CloudflareRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewCloudflareRepository(t mockConstructorTestingTNewCloudflareRepository) *CloudflareRepository {
	mock := &CloudflareRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
